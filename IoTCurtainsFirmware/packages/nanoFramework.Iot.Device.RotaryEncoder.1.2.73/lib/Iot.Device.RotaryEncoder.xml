<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Iot.Device.RotaryEncoder</name>
    </assembly>
    <members>
        <member name="T:Iot.Device.RotaryEncoder.RotaryEncoderEventHandler">
            <summary>
            Event handler to allow the notification of value changes.
            </summary>
        </member>
        <member name="T:Iot.Device.RotaryEncoder.QuadratureRotaryEncoder">
            <summary>
            Binding that exposes a quadrature rotary encoder
            </summary>
        </member>
        <member name="P:Iot.Device.RotaryEncoder.QuadratureRotaryEncoder.PulsesPerRotation">
            <summary>
            The number of pulses expected per rotation of the encoder
            </summary>
        </member>
        <member name="P:Iot.Device.RotaryEncoder.QuadratureRotaryEncoder.PulseCount">
            <summary>
            The number of pulses before or after the start position of the encoder
            </summary>
        </member>
        <member name="P:Iot.Device.RotaryEncoder.QuadratureRotaryEncoder.Rotations">
            <summary>
            The number of rotations backwards or forwards from the initial position of the encoder
            </summary>
        </member>
        <member name="P:Iot.Device.RotaryEncoder.QuadratureRotaryEncoder.Debounce">
            <summary>The Debounce property represents the minimum amount of delay
            allowed between falling edges of the A (clk) pin. The recommended value are few milliseconds typically around 5.
            This depends from your usage.</summary>
        </member>
        <member name="E:Iot.Device.RotaryEncoder.QuadratureRotaryEncoder.PulseCountChanged">
            <summary>
            EventHandler to allow the notification of value changes.
            </summary>
        </member>
        <member name="M:Iot.Device.RotaryEncoder.QuadratureRotaryEncoder.#ctor(System.Int32,System.Int32,System.Device.Gpio.PinEventTypes,System.Int32,System.Device.Gpio.GpioController,System.Boolean)">
            <summary>
            QuadratureRotaryEncoder constructor
            </summary>
            <param name="pinA">Pin A that is connected to the rotary encoder. Sometimes called clk</param>
            <param name="pinB">Pin B that is connected to the rotary encoder. Sometimes called data</param>
            <param name="edges">The pin event types to 'listen' for.</param>
            <param name="pulsesPerRotation">The number of pulses to be received for every full rotation of the encoder.</param>
            <param name="controller">GpioController that hosts Pins A and B.</param>
            <param name="shouldDispose">True to dispose the controller</param>
        </member>
        <member name="M:Iot.Device.RotaryEncoder.QuadratureRotaryEncoder.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            QuadratureRotaryEncoder constructor
            </summary>
            <param name="pinA">Pin A that is connected to the rotary encoder. Sometimes called clk</param>
            <param name="pinB">Pin B that is connected to the rotary encoder. Sometimes called data</param>
            <param name="pulsesPerRotation">The number of pulses to be received for every full rotation of the encoder.</param>
        </member>
        <member name="M:Iot.Device.RotaryEncoder.QuadratureRotaryEncoder.OnPulse(System.Boolean,System.Int32)">
            <summary>
            Modify the current value on receipt of a pulse from the rotary encoder.
            </summary>
            <param name="blnUp">When true then the value should be incremented otherwise it should be decremented.</param>
            <param name="milliSecondsSinceLastPulse">The number of miliseconds since the last pulse.</param>
        </member>
        <member name="M:Iot.Device.RotaryEncoder.QuadratureRotaryEncoder.Initialize(System.Int32,System.Int32,System.Device.Gpio.PinEventTypes)">
            <summary>
            Initialize an QuadratureRotaryEncoder
            </summary>
            <param name="pinA">Pin A that is connected to the rotary encoder. Sometimes called clk</param>
            <param name="pinB">Pin B that is connected to the rotary encoder. Sometimes called data</param>
            <param name="edges">The pin event types to 'listen' for.</param>
        </member>
        <member name="M:Iot.Device.RotaryEncoder.QuadratureRotaryEncoder.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:Iot.Device.RotaryEncoder.RotaryEncoderEventArgs">
            <summary>
            EventArgs used with the RotaryEncode binding to pass event information when the Value changes.
            </summary>
        </member>
        <member name="P:Iot.Device.RotaryEncoder.RotaryEncoderEventArgs.Value">
            <summary>The Value property represents current value associated with the RotaryEncoder.</summary>
        </member>
        <member name="M:Iot.Device.RotaryEncoder.RotaryEncoderEventArgs.#ctor(System.Double)">
            <summary>
            Construct a new RotaryEncoderEventArgs
            </summary>
            <param name="value">Current value associated with the rotary encoder</param>
        </member>
        <member name="T:Iot.Device.RotaryEncoder.ScaledQuadratureEncoder">
            <summary>
            Scaled Quadrature Rotary Controller binding
            </summary>
        </member>
        <member name="P:Iot.Device.RotaryEncoder.ScaledQuadratureEncoder.Value">
            <summary>The Value property represents current value associated with the RotaryEncoder.</summary>
        </member>
        <member name="P:Iot.Device.RotaryEncoder.ScaledQuadratureEncoder.AccelerationSlope">
            <summary>The AccelerationSlope property along with the AccelerationOffset property represents how the
            increase or decrease in value should grow as the incremental encoder is turned faster.</summary>
        </member>
        <member name="P:Iot.Device.RotaryEncoder.ScaledQuadratureEncoder.AccelerationOffset">
            <summary>The AccelerationOffset property along with the AccelerationSlope property represents how the
            increase or decrease in value should grow as the incremental encoder is turned faster.</summary>
        </member>
        <member name="E:Iot.Device.RotaryEncoder.ScaledQuadratureEncoder.ValueChanged">
            <summary>
            EventHandler to allow the notification of value changes.
            </summary>
        </member>
        <member name="M:Iot.Device.RotaryEncoder.ScaledQuadratureEncoder.#ctor(System.Int32,System.Int32,System.Device.Gpio.PinEventTypes,System.Int32,System.Double,System.Double,System.Double,System.Device.Gpio.GpioController,System.Boolean)">
            <summary>
            ScaledQuadratureEncoder constructor
            </summary>
            <param name="pinA">Pin A that is connected to the rotary encoder. Sometimes called clk</param>
            <param name="pinB">Pin B that is connected to the rotary encoder. Sometimes called data</param>
            <param name="edges">The pin event types to 'listen' for.</param>
            <param name="pulsesPerRotation">The number of pulses to be received for every full rotation of the encoder.</param>
            <param name="pulseIncrement">The amount that the value increases or decreases on each pulse from the rotary encoder</param>
            <param name="rangeMin">Minimum value permitted. The value is clamped to this.</param>
            <param name="rangeMax">Maximum value permitted. The value is clamped to this.</param>
            <param name="controller">GpioController that hosts Pins A and B.</param>
            <param name="shouldDispose">Dispose the controller if true</param>
        </member>
        <member name="M:Iot.Device.RotaryEncoder.ScaledQuadratureEncoder.#ctor(System.Int32,System.Int32,System.Device.Gpio.PinEventTypes,System.Int32,System.Double,System.Double,System.Double)">
            <summary>
            ScaledQuadratureEncoder constructor
            </summary>
            <param name="pinA">Pin A that is connected to the rotary encoder. Sometimes called clk</param>
            <param name="pinB">Pin B that is connected to the rotary encoder. Sometimes called data</param>
            <param name="edges">The pin event types to 'listen' for.</param>
            <param name="pulsesPerRotation">The number of pulses to be received for every full rotation of the encoder.</param>
            <param name="pulseIncrement">The amount that the value increases or decreases on each pulse from the rotary encoder</param>
            <param name="rangeMin">Minimum value permitted. The value is clamped to this.</param>
            <param name="rangeMax">Maximum value permitted. The value is clamped to this.</param>
        </member>
        <member name="M:Iot.Device.RotaryEncoder.ScaledQuadratureEncoder.#ctor(System.Int32,System.Int32,System.Device.Gpio.PinEventTypes,System.Int32)">
            <summary>
            ScaledQuadratureEncoder constructor for a 0..100 range with 100 steps
            </summary>
            <param name="pinA">Pin A that is connected to the rotary encoder. Sometimes called clk</param>
            <param name="pinB">Pin B that is connected to the rotary encoder. Sometimes called data</param>
            <param name="edges">The pin event types to 'listen' for.</param>
            <param name="pulsesPerRotation">The number of pulses to be received for every full rotation of the encoder.</param>
        </member>
        <member name="M:Iot.Device.RotaryEncoder.ScaledQuadratureEncoder.#ctor(System.Int32,System.Int32,System.Device.Gpio.PinEventTypes,System.Int32,System.Device.Gpio.GpioController,System.Boolean)">
            <summary>
            ScaledQuadratureEncoder constructor for a 0..100 range with 100 steps
            </summary>
            <param name="pinA">Pin A that is connected to the rotary encoder. Sometimes called clk</param>
            <param name="pinB">Pin B that is connected to the rotary encoder. Sometimes called data</param>
            <param name="edges">The pin event types to 'listen' for.</param>
            <param name="pulsesPerRotation">The number of pulses to be received for every full rotation of the encoder.</param>
            <param name="controller">GpioController that hosts Pins A and B.</param>
            <param name="shouldDispose">Dispose the controller if true</param>
        </member>
        <member name="M:Iot.Device.RotaryEncoder.ScaledQuadratureEncoder.ReadValue">
            <summary>
            Read the current Value
            </summary>
            <returns>The value associated with the rotary encoder.</returns>
        </member>
        <member name="M:Iot.Device.RotaryEncoder.ScaledQuadratureEncoder.Acceleration(System.Int32)">
            <summary>
            Calculate the amount of acceleration to be applied to the increment of the encoder.
            </summary>
            <remarks>
            This uses a straight line function output = input * AccelerationSlope + Acceleration offset but can be overridden
            to perform different algorithms.
            </remarks>
            <param name="milliSecondsSinceLastPulse">The amount of time elapsed since the last data pulse from the encoder in milliseconds.</param>
            <returns>A value that can be used to apply acceleration to the rotary encoder.</returns>
        </member>
        <member name="M:Iot.Device.RotaryEncoder.ScaledQuadratureEncoder.OnPulse(System.Boolean,System.Int32)">
            <summary>
            Modify the current value on receipt of a pulse from the encoder.
            </summary>
            <param name="blnUp">When true then the value should be incremented otherwise it should be decremented.</param>
            <param name="milliSecondsSinceLastPulse">The amount of time elapsed since the last data pulse from the encoder in milliseconds.</param>
        </member>
    </members>
</doc>
